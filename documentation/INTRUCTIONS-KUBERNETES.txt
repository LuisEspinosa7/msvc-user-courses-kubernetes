##################################################
########## DEPLOY ON AWS EKS #####################
##################################################

- CREATE ROLE FOR EKS 
    https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html#create-service-role
- CREATE VPCs THROUGHT CLOUDFORMATION. 
    https://docs.aws.amazon.com/eks/latest/userguide/creating-a-vpc.html#create-vpc
- CREATE CLUSTER EKS.
- CHANGE KUBECTL&MINIKUBE TO KUBECTL&AMAZON COMMUNICATION.
- CONFIGURE CLI 
    https://aws.amazon.com/es/cli/
    aws configure
- CHANGE CONFIG
    aws eks --region us-east-1 update-kubeconfig --name k8s-courses-users
- USE KUBECTL
     kubectl get pods
- CREATE NODE GROUP
    - CONFIGURE ROLES FOR EC2 (AmazonEKSWorkerNodePolicy, AmazonEKS_CNI_Policy, AmazonEC2ContainerRegistryReadOnly)
    - APPLY ROLE TO NODE GROUP.
    - CREATE THE NODES. (EC2 MACHINES AUTOMATICALLY)
- CONFIGURE VOLUME EFS FOR MYSQL WITH CSI Container Storage Interface.
    - EFS NEW
    - CONFIGURE SECURITY GROUP FOR THE SUBNETS FOR NFS WITH THE IPv4 CIDR 192.168.0.0/16
    - ON NETWORK ACCESS FOR EFS WE HAVE TO SELECT THAT SECURITY GROUP.
- CONFIGURE VOLUME EFS FOR POSTGRES WITH CSI Container Storage Interface.
    - EFS NEW
    - SELECT THE PREVIOUS SECURITY GROUP IPv4 CIDR 192.168.0.0/16
    - ON NETWORK ACCESS FOR EFS WE HAVE TO SELECT THAT SECURITY GROUP.
- INSTALL Amazon EFS CSI Driver INSIDE KUBERNETES 
    - https://github.com/kubernetes-sigs/aws-efs-csi-driver
    - STABLE VERSION
        kubectl apply -k "github.com/kubernetes-sigs/aws-efs-csi-driver/deploy/kubernetes/overlays/stable/?ref=release-1.3"
- APPLY ALL THE RESOURCES (CHANGE FIRST YOUR PERSISTENT VOLUMES WITH YOURS IN AWS)

- DEPLOYMENT
kubectl create clusterrolebinding admin --clusterrole=cluster-admin --serviceaccount=default:default
kubectl apply -f .\configmap.yaml
kubectl apply -f .\secret.yaml
kubectl apply -f .\mysql-pv.yaml
kubectl apply -f .\mysql-pvc.yaml
kubectl apply -f .\postgres-pv.yaml
kubectl apply -f .\postgres-pvc.yaml
kubectl apply -f .\deployment-mysql.yaml
kubectl apply -f .\deployment-postgres.yaml
kubectl apply -f .\svc-mysql.yaml
kubectl apply -f .\svc-postgres.yaml

kubectl apply -f .\deployment-cursos.yaml
kubectl apply -f .\deployment-usuarios.yaml
kubectl apply -f .\svc-cursos.yaml
kubectl apply -f .\svc-usuarios.yaml

kubectl get svc (There should be the load balancer url for each service)

a95b0cc0745de4bd1862a6bc89cba033-271299896.us-east-1.elb.amazonaws.com (USERS)
a609bb69aa6e042b59da3c3e8ac15308-1998659544.us-east-1.elb.amazonaws.com (Courses)





